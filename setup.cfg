[metadata]
name = radiospectra
provides = radiospectra
description = Provide support for some type of radio spectra in solar physics
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The SunPy Community
author_email = sunpy@googlegroups.com
license = BSD 2-Clause
license_files = LICENSE.rst
url = https://sunpy.org
edit_on_github = True
github_project = sunpy/radiospectra
platform = any
keywords = solar physics, solar, science, sun, wcs, coordinates, radio, spectra
classifiers =
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.9
packages = find:
include_package_data = True
setup_requires =
  setuptools_scm
install_requires =
  sunpy[net]>=5.0.0
  numpy
  matplotlib
  scipy
  cdflib>=0.3.20

[options.packages.find]
exclude = radiospectra._dev

[options.extras_require]
tests =
  pytest-astropy
  pytest-doctestplus
  sunpy-soar
docs =
  sphinx-automodapi
  sphinx-changelog
  sphinx-gallery
  sphinx
  sunpy-sphinx-theme
  # Remove next line when fixed in towncrier; see https://github.com/twisted/towncrier/issues/528
  importlib-resources<6

[options.package_data]
radiospectra = data/*

[tool:pytest]
testpaths = "radiospectra" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".jupyter" ".history" "tools" "radiospectra[\/]_dev"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = --doctest-rst --doctest-ignore-import-errors -p no:unraisableexception -p no:threadexception
markers =
    remote_data: marks this test function as needing remote data.
    online: marks this test function as needing online connectivity.
remote_data_strict = True
# Pin junit behaviour; we might want to update this to xunit2 at some point
junit_family=xunit1
filterwarnings =
    error
    #
    # A list of warnings to ignore follows. If you add to this list, you MUST
    # add a comment or ideally a link to an issue that explains why the warning
    # is being ignored
    #
    #
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    # Zeep
    ignore:'cgi' is deprecated:DeprecationWarning
    # Issue with pytest-cov injecting --rsync arg https://github.com/pytest-dev/pytest-xdist/issues/825
    # https://github.com/pytest-dev/pytest-cov/issues/557
    ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning
    ignore:File may have been truncated.*

[pycodestyle]
max_line_length = 100

[flake8]
max-line-length = 100
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
rst-directives =
    plot

[isort]
balanced_wrapping = True
skip=docs/conf.py
default_section = THIRDPARTY
include_trailing_comma = True
known_astropy = astropy, asdf, sunpy
length_sort = False
length_sort_sections=stdlib
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  radiospectra/_sunpy_init*
  radiospectra/conftest.py
  radiospectra/*setup_package*
  radiospectra/tests/*
  radiospectra/*/tests/*
  radiospectra/extern/*
  radiospectra/version*
  */radiospectra/_sunpy_init*
  */radiospectra/conftest.py
  */radiospectra/*setup_package*
  */radiospectra/tests/*
  */radiospectra/*/tests/*
  */radiospectra/extern/*
  */radiospectra/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
